<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker(2): Docker Best Practices</title>
    <url>/2020/04/19/Docker/Docker%20Best%20Practices/</url>
    <content><![CDATA[<h1 id="Docker-Best-Practices"><a href="#Docker-Best-Practices" class="headerlink" title="Docker Best Practices"></a>Docker Best Practices</h1><p>当谈 docker 最佳实践的时候，可以从为以下五个维度出发或者说最佳实践能从以下五个维度帮助到我们。</p>
<ul>
<li>增加构建速度</li>
<li>增强可用性/可维护性</li>
<li>减少空间占中</li>
<li>获得更多信息</li>
<li>增强安全性</li>
</ul>
<h2 id="1-推荐使用-Buildkit"><a href="#1-推荐使用-Buildkit" class="headerlink" title="1. 推荐使用 Buildkit"></a>1. 推荐使用 Buildkit</h2><p><a href="https://github.com/moby/buildkit" target="_blank" rel="noopener">Buildkit</a> 是<a href="https://github.com/moby" target="_blank" rel="noopener">Docker’s moby</a> 开源项目下的子项目，目前( 2020.04 )所有功能还处于实验阶段，但是 Buildkit 预计将会是下一代的 image build 组件。 官方在 Docker <a href="https://docs.docker.com/engine/release-notes/18.09/#18090" target="_blank" rel="noopener">18.09</a> 将其作为一个功能发布，默认是关闭的状态。</p>
<h3 id="1-1-开启-buildkit-方法："><a href="#1-1-开启-buildkit-方法：" class="headerlink" title="1.1 开启 buildkit 方法："></a>1.1 开启 buildkit 方法：</h3><p>单次构建开启，设置环境变量 DOCKER_BUILDKIT=1</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ DOCKER_BUILDKIT=1 docker build .</span><br></pre></td></tr></table></figure>

<p>默认开启 buildkit 功能， 设置 /etc/docker/daemon.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">"features"</span>: &#123; <span class="attr">"buildkit"</span>: <span class="literal">true</span> &#125; &#125;</span><br></pre></td></tr></table></figure>



<h3 id="1-2-Buildkit-的功能特点（大多数还处于实验阶段）："><a href="#1-2-Buildkit-的功能特点（大多数还处于实验阶段）：" class="headerlink" title="1.2 Buildkit 的功能特点（大多数还处于实验阶段）："></a>1.2 Buildkit 的功能特点（大多数还处于实验阶段）：</h3><ul>
<li>自动垃圾回收</li>
<li>可扩展的前端格式  （有已知<a href="https://github.com/moby/buildkit/issues/1222" target="_blank" rel="noopener">问题 </a>存在）</li>
<li>支持多步并发构建（目前的 docker build 是顺序执行）</li>
<li>高效的缓存计算 </li>
<li>支持使用缓存的导入/导出 （可以提高 CI 构建速度）</li>
<li>采用嵌套的构建方式</li>
<li>可分配 workers</li>
<li>多种输出格式 （<strong>推荐的主要原因</strong>）</li>
<li>可插拔架构</li>
<li>不需要root权限的执行</li>
</ul>
<h3 id="1-3-在处于实验阶段推介-Buildkit-的原因是："><a href="#1-3-在处于实验阶段推介-Buildkit-的原因是：" class="headerlink" title="1.3 在处于实验阶段推介 Buildkit 的原因是："></a>1.3 在处于实验阶段推介 Buildkit 的原因是：</h3><ul>
<li><p>Buildkit 优化了 build command 的构建输出，更加友好的方便获取构建时的信息。</p>
<p>下图分别是使用 Buildkit 与否以及 Buildkit 不同模式下的 build command build output 格式：</p>
<p><img src="../../../images/docker/buildkit-output.png" alt="buildkit-output"></p>
<p>Buildkit 目前非常可靠和好用的功能是友好的格式化输出，相比较传统的 docker build command 输出更加的直观清晰， 在我们调优 Dockerfile 的时候， 相对于传统的输出可以更加直观的帮助查看 docker build 的信息。</p>
</li>
<li><p>使用 Buildkit <code>--secret</code> 功能可以避免在 image 中保留敏感信息（实际上也处于测试阶段，所以使用的时候需要在 Dockerfile 中明确的注明允许使用测试功能注释）。</p>
<p>传统的方式在构建 image 时会将敏感信息一同的保存在 image 中，或者在构建完成以后，手动删除敏感信，而使用了 buildkit  <code>--secret</code> 的方式， 敏感信息只会存在构建时。虽然 <code>--secret</code> 还处于测试阶段，但是相对稳定。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker(1): Why use docker</title>
    <url>/2020/01/27/Docker/docker-1/</url>
    <content><![CDATA[<h3 id="What-is-docker"><a href="#What-is-docker" class="headerlink" title="What is docker?"></a>What is docker?</h3><h3 id="Why-should-we-use-docker-Docker-could-solved-which-pain-points"><a href="#Why-should-we-use-docker-Docker-could-solved-which-pain-points" class="headerlink" title="Why should we use docker? Docker could solved which pain points?"></a>Why should we use docker? Docker could solved which pain points?</h3><h4 id="matrix-from-hell"><a href="#matrix-from-hell" class="headerlink" title="matrix from hell"></a>matrix from hell</h4><h4 id="It-works-on-my-machine"><a href="#It-works-on-my-machine" class="headerlink" title="It works on my machine"></a>It works on my machine</h4><h4 id="Instruction-as-a-code"><a href="#Instruction-as-a-code" class="headerlink" title="Instruction as a code"></a>Instruction as a code</h4><h3 id="What-is-the-advantages-of-Docker"><a href="#What-is-the-advantages-of-Docker" class="headerlink" title="What is the advantages of Docker?"></a>What is the advantages of Docker?</h3><h3 id="Docker-vs-VM"><a href="#Docker-vs-VM" class="headerlink" title="Docker vs VM"></a>Docker vs VM</h3><h3 id="Docker-vs-rkt"><a href="#Docker-vs-rkt" class="headerlink" title="Docker vs rkt"></a>Docker vs rkt</h3>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
